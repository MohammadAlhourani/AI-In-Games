<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Pvector.h</FILENAME>
      <LINE>24</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Pvector::y' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Pvector::{ctor}</FUNCTION>
    <DECORATED>??0Pvector@@QAE@XZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Pvector::y</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Boid.h</FILENAME>
      <LINE>40</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Boid::maxSpeed' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Boid::{ctor}</FUNCTION>
    <DECORATED>??0Boid@@QAE@XZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Boid::maxSpeed</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Boid.h</FILENAME>
      <LINE>41</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Boid::predator' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Boid::{ctor}</FUNCTION>
    <DECORATED>??0Boid@@QAE@MM@Z</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Boid::predator</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Boid.cpp</FILENAME>
      <LINE>241</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Boid::angle</FUNCTION>
    <DECORATED>?angle@Boid@@QAEMVPvector@@@Z</DECORATED>
    <FUNCLINE>238</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Game.cpp</FILENAME>
      <LINE>219</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'sf::PrimitiveType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>sf::VertexArray::{ctor}</FUNCTION>
    <DECORATED>??0VertexArray@sf@@QAE@ABV01@@Z</DECORATED>
    <FUNCLINE>192</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Pvector.cpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Pvector::angleBetween</FUNCTION>
    <DECORATED>?angleBetween@Pvector@@QAEMV1@@Z</DECORATED>
    <FUNCLINE>124</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Mohammad Alhourani\Documents\GitHub\AI-In-Games\Ai Labs\FlockTest\Boids\</FILEPATH>
      <FILENAME>Pvector.cpp</FILENAME>
      <LINE>129</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Pvector::angleBetween</FUNCTION>
    <DECORATED>?angleBetween@Pvector@@QAEMV1@@Z</DECORATED>
    <FUNCLINE>124</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>